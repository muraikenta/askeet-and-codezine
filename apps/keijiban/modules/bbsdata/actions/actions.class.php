<?php
// auto-generated by sfPropelCrud
// date: 2013/12/16 23:41:33
?>
<?php

/**
 * bbsdata actions.
 *
 * @package    mysite
 * @subpackage bbsdata
 * @author     Your name here
 * @version    SVN: $Id: actions.class.php 3335 2007-01-23 16:19:56Z fabien $
 */
class bbsdataActions extends sfActions
{
  public function executeIndex()
  {
    return $this->forward('bbsdata', 'list');
  }

  public function executeList()
  {
   $this->pager = BbsdataPeer::getMybbsPager($this->getRequestParameter('page',1));
   foreach($this->pager->getResults() as $parent)
   {
     $no = 'threads'.$parent->getId();
     $this->{$no} = BbsdataPeer::getMybbsReplies($parent);
   }
  }
/*
  public function executeShow()
  {
    $this->bbsdata = BbsdataPeer::retrieveByPk($this->getRequestParameter('id'));
    $this->forward404Unless($this->bbsdata);
  }
*/
  public function executeCreate()
  {
    $this->bbsdata = new Bbsdata();

    $this->setTemplate('edit');
  }

  public function executeEdit()
  {
    $this->bbsdata = BbsdataPeer::retrieveByPk($this->getRequestParameter('id'));
    $this->forward404Unless($this->bbsdata);
  }

  public function executeUpdate()
  {
    if (!$this->getRequestParameter('id'))
    {
      $bbsdata = new Bbsdata();
    }
    else
    {
      $bbsdata = BbsdataPeer::retrieveByPk($this->getRequestParameter('id'));
      $this->forward404Unless($bbsdata);
    }

    $bbsdata->setId($this->getRequestParameter('id'));
    $bbsdata->setTitle($this->getRequestParameter('title'));
    $bbsdata->setAuthor($this->getRequestParameter('author'));
    $bbsdata->setMail($this->getRequestParameter('mail'));
    $bbsdata->setUrl($this->getRequestParameter('url'));
    $body = str_replace("/r/n","/n",$this->getRequestParameter('body'));
    $bodt = str_replace("/r","/n",$body);
    $bbsdata->setBody($body);
    $bbsdata->setPasswd($this->getRequestParameter('passwd'));
    $bbsdata->setParentId($this->getRequestParameter('parent_id'));

    $bbsdata->save();

    return $this->redirect('bbsdata/list');
  }

#  public function executeDelete()
#  {
#    $bbsdata = BbsdataPeer::retrieveByPk($this->getRequestParameter('id'));
#
#    $this->forward404Unless($bbsdata);
#
#    $bbsdata->delete();
#
#    return $this->redirect('bbsdata/list');
#  }

  public function executeSakujo()
  {
   $bbsdata = BbsdataPeer::retrieveByPk($this->getRequestParameter('id'));

   if($this->getRequestParameter('sakujo_key') == $bbsdata->getPasswd()){
     $this->forward404Unless($bbsdata);
     $bbsdata->setTitle('DELETED');
     $bbsdata->save();
   }else{
     return sfView::ERROR;
   }

   return $this->redirect('bbsdata/list');
  }
  
  public function executeSearch()
  {
    $this->skey = $this->getRequestParameter('kensaku_key');
    $this->bbsdatas = BbsdataPeer::getSearchResults($this->skey);
  }

  public function handleErrorUpdate()
  {
    $this->forward('bbsdata','create');
  }
}

